<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="com.hypeboy.codemeets.model.dao.GroupDao">
	
	<resultMap type="GroupDto" id="group">
		<result column="group_pk" property="groupPk" />
		<result column="group_name" property="groupName" />
		<result column="group_desc" property="groupDesc" />
		<result column="manager_id" property="managerId" />
		<result column="group_url" property="groupUrl" />
	</resultMap>
	
	<resultMap type="GroupUserDto" id="guDto">
		<result column="user_pk" property="userPk" />
		<result column="group_pk" property="groupPk" />
		<result column="user_id" property="userId"/>
		<result column="user_name" property="username"/>
	</resultMap>
	
	<resultMap type="GroupListDto" id="glDto">
		<result column="cnt" property="cnt"/>
		<result column="group_name" property="groupName"/>
		<result column="nickname" property="nickname"/>
		<result column="count" property="count"/>
		<result column="callStartTime" property="callStartTime"/>
		<result column="manager_name" property="managerName"/>
		<result column="manager_id" property="managerId"/>
		<result column="user_pk" property="userPk"/>
		<result column="group_pk" property="groupPk"/>
		<result column="group_url" property="groupUrl"/>
	</resultMap>
	
	<resultMap type="UserDto" id="user">
		<result column="user_pk" property="userPk" />
		<result column="user_id" property="userId" />
		<result column="user_name" property="userName" />
		<result column="nickname" property="nickname" />
		<result column="user_active" property="userActive" />
		<result column="user_info_pk" property="userInfoPk" />
		<result column="profile_photo" property="profilePhoto" />
		<result column="email_public" property="emailPublic" />
		<result column="tel_public" property="telPublic"/>
		<result column="group_user_position" property="groupUserPosition"/>
	</resultMap>
	
	<insert id="createGroup" useGeneratedKeys="true" keyProperty="groupPk" >
		<![CDATA[
			INSERT INTO
			 `group`(group_name,group_desc,group_url,manager_id)
			VALUES
			  (#{groupName}, #{groupDesc},#{groupUrl},#{managerId});
		]]>
	</insert>
	
	<select id="detailGroup" resultMap="group">
	<![CDATA[
		SELECT
		*
		FROM
		`group`
		where
		`group_pk`=#{groupPk}
	]]>
	</select>
	
	<insert id="createGroupUser" >
	<![CDATA[
		insert into
		 `group-user`
		 (group_user_position,group_pk,user_pk) 
		 values (1,#{groupPk},#{userPk});
		  ]]>
	</insert>
	
	<select id="groupMemberList" resultMap="user">
		<![CDATA[
			SELECT 
				user.user_pk, user.user_id, 
				user_info.user_name, user_info.nickname, user_info.profile_photo, 
				user_info.email, user_info.tel, 
				user_info.email_public, user_info.tel_public, 
				`group-user`.group_pk, `group-user`.group_user_position 
			FROM
				user user, user_info user_info, `group-user` `group-user`
 			WHERE 
	 			user.user_pk = user_info.user_pk
				and `group-user`.user_pk = user_info.user_pk 
				and `group-user`.group_pk = #{groupPk};
		]]>
	</select>
	
	<insert id="groupJoin" >
	<![CDATA[
		insert into
		`group-user`(group_pk,user_pk,group_user_position)
		values
		(#{groupPk},#{userPk},3);
		  ]]>
	</insert>
	
	
	    <!-- getList 수정 전 
	     select 
		`group`.group_name, `user_info`.nickname
		from 
		`group` `group`, user_info user_info,`group-user` `group-user`
		where 
		`group`.group_pk=`group-user`.group_pk and `user_info`.user_pk=`group-user`.user_pk and `user_info`.user_pk=#{userPk}
		 -->
	<select id="getList" resultMap="glDto">
	<![CDATA[
      SELECT
			a.group_pk group_pk, a.group_name group_name, (select user_name from user_info where user_pk= a.manager_id) as manager_name,
			a.manager_id manager_id, a.group_url,
			b.nickname nickname 
		FROM 
			`group` AS a 
			INNER JOIN user_info AS b 
			INNER JOIN `group-user` AS c
		ON 
			a.group_pk = c.group_pk 
		AND 
			b.user_pk = c.user_pk 
		WHERE 
			c.user_pk = #{userPk} AND a.group_pk != 0
		ORDER BY ${order} DESC 
		LIMIT #{nowPage}, #{items};
		]]>
	</select>
	
	<select id="countMember" resultType="int">
	<![CDATA[
		select 
		count(*) 
		from 
		`group-user` 
		where 
		group_pk = #{groupPk};
		]]>
	</select>
	
	<select id="countGroup" resultType="int">
	<![CDATA[
		select 
		count(*) 
		from 
		`group`;
		]]>
	</select>
	
	<select id="gpList" resultType="int">
	<![CDATA[
		SELECT 
		`group-user`.`group_pk`
		FROM 
		`group-user`
        WHERE 
        `group-user`.user_pk = #{userPk} AND `group-user`.group_pk != 0;
		]]>
	</select>
	<select id="callStartTime" resultType="String">
	<![CDATA[
		select 
		date_format(max(call_start_time), '%Y-%m-%d')
		from 
		conference 
		where 
		group_pk=#{groupPk};
	]]>
	</select>
	
	<select id="groupDetail" parameterType="int" resultMap="group">
		<![CDATA[
			select
			group_pk,group_name,group_desc,manager_id,group_url
			from
			`group`
			where
			group_pk=#{groupPk};
		]]>
	</select>
	
	 <update id="groupModify">
		<![CDATA[
			UPDATE
			 `group`
			  set 
			  `group`.group_name= #{groupName}, `group`.group_desc= #{groupDesc}
			  where 
			  `group`.`group_pk` = #{groupPk};
		]]>
	</update>
	
	<delete id="groupDelete">
		DELETE FROM
		`group`
		where
		`group_pk`=#{groupPk};
	</delete>
	 
	 <select id="checkUrl" resultMap="group">
		select 
		* 
		from 
		`group` 
		where 
		group_url = #{groupUrl};	 	
	 </select>
	 
	 <select id="duplicated" resultType="Integer">
	 	select 
	 	* 
	 	from 
	 	`group-user` 
	 	where
	 	user_pk=#{userPk} and group_pk=#{groupPk};
	 </select>
	 
	 <delete id="groupLeft">
	 	delete from 
	 	`group-user` 
	 	where 
	 	user_pk=#{userPk} and group_pk=#{groupPk};
	 </delete>
	 
	 <select id="checkManager" resultType="int">
	 <![CDATA[
	 select 
	 group_user_position
	  from 
	  `group-user` 
	  where 
	  user_pk = #{userPk} and group_pk=#{groupPk};
	 ]]>
	 
	 </select>
	</mapper>
	
