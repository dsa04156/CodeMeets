<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hypeboy.codemeets.model.dao.MessageDao">
	<resultMap type="messageDto" id="messageDto">
		<result column="message_pk" property="messagePk" />
		<result column="room" property="room" />
		<result column="send_pk" property="sendPk" />
		<result column="recv_pk" property="recvPk" />
		<result column="send_nick" property="sendNick" />
		<result column="recv_nick" property="recvNick" />
		<result column="send_time" property="sendTime" />
		<result column="recv_time" property="recvTime" />
		<result column="content" property="content" />
		<result column="read_chk" property="readChk" />
		<result column="user_pk" property="userPk" />
		<result column="other_nick" property="other_nick" />
		<result column="profile_photo" property="profilePhoto" />
		<result column="nick" property="nick" />
		<result column="unread" property="unread" />
	</resultMap>
	
	<resultMap type="UserDto" id="user">
		<result column="user_pk" property="userPk" />
		<result column="user_id" property="userId" />
		<result column="user_name" property="userName" />
		<result column="user_active" property="userActive" />
		<result column="user_info_pk" property="userInfoPk" />
		<result column="profile_photo" property="profilePhoto" />
		<result column="email_public" property="emailPublic" />
		<result column="tel_public" property="telPublic"/>
		<result column="provider" property="provider"/>
		<result column="provider_id" property="providerId"/>
	</resultMap>
	

	<!-- ==================== 회의 상세 페이지 조회 ======================================== -->
	<select id="getNickName" resultType="string">
		<![CDATA[
			select 
			nickname 
			from 
			user_info 
			where 
			user_pk=#{userPk};
		]]>
		
	</select>
	<select id="messageList" resultMap="messageDto" parameterType="messageDto">
		<![CDATA[
		select 
		message_pk,room,send_pk,recv_pk,date_format(send_time,'%Y-%m-%d:%i') send_time , read_time,content, read_chk
		from message
		where
	 message_pk in (select max(message_pk) from message group by room) and (send_pk=#{userPk} or recv_pk=#{userPk}) order by message_pk desc;
		]]>
	</select>
	
	<select id = "getOtherProfile" resultType="String">
		<![CDATA[
		SELECT profile_photo
		FROM `user_info` 
		WHERE user_pk = #{otherPk};
		]]>
	</select>
	
	<select id="countUnread" parameterType="messageDto" resultType="int">
	<![CDATA[
		select count(message_pk) from message 
    where recv_pk=#{userPk} and read_chk=0 and room=#{room};
	]]>
	</select>
	
	<select id="roomContentList" resultMap="messageDto">
	<![CDATA[
select m.message_pk,m.room,m.send_pk,m.recv_pk, date_format(m.send_time, '%Y-%m-%d %H:%i') send_time, m.read_time,
		m.content,m.read_chk, u.profile_photo
		from message m left outer join user_info u on send_pk = u.user_pk
        where if
        (#{room}!=0,room=#{room},(recv_pk=#{recvPk} and send_pk = #{userPk})
         or 
         send_pk=#{recvPk} and recv_pk = #{userPk});
	]]>
	</select>
	
	<update id="messageReadChk" parameterType="messageDto">
		<![CDATA[
			update message set read_chk=1
			where if(#{room}!=0,
			room=#{room} and read_chk=0 and recv_pk=#{userPk},
      		send_pk=#{recvPk} and read_chk=0 and recv_pk=#{userPk}
			);
		]]>
	</update>
	
	<select id="existChat" parameterType="messageDto" resultType="int">
		select count(message_pk) from message
		where (recv_pk=#{recvPk} and send_pk = #{sendPk}) or (send_pk = #{recvPk} and recv_pk = #{sendPk});
	</select>
	
	<select id="maxRoom" parameterType="messageDto" resultType="int">
		<![CDATA[
			select max(room) from message;
		]]>
	</select>
	
	<select id="selectRoom" parameterType="messageDto" resultType="string">
		<![CDATA[
			select room from message
			where (recv_pk=#{recvPk} and send_pk=#{sendPk}) 
			or
			(send_pk = #{recvPk} and recv_pk = #{sendPk});
		]]>
	</select>
	
	<insert id="sendMessage" parameterType="messageDto">
			<choose>
				<when test="room !=0">
				insert into message(room,send_pk,recv_pk,send_time,read_time,content,read_chk,user_pk) values(#{room},#{sendPk},#{recvPk},now(),now(),#{content},0,#{userPk})
				</when>
				<otherwise>
				insert into message(room,send_pk,recv_pk,send_time,read_time,content,read_chk,user_pk) values(#{room},#{sendPk},#{recvPk},now(),now(),#{content},0,#{userPk})
				</otherwise>
			</choose>
	</insert>
	
	<!-- 채팅방에 추가할 유저 리스트 조회 -->
	<select id="searchUser" resultMap="user">
		<![CDATA[
			SELECT user_pk, user_name, nickname, email, email_public, profile_photo 
			FROM `user_info`
			WHERE nickname LIKE '%${nickname}%' AND user_pk != #{userPk};
		]]>
	</select>
	
	<!-- 생성한 방 번호가 사용중인지 확인 -->
	<select id="checkRoomNo" parameterType="int" resultType="int">
		<![CDATA[
			SELECT count(*) 
			FROM `message`
			WHERE room = #{roomNo};
		]]>
	</select>
	
</mapper>